akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  log-config-on-start = off
  log-dead-letters = 0
  log-dead-letters-during-shutdown = off

  actor {
    passivate-timeout = 6 seconds
    number-of-shards = 100

    provider = "akka.cluster.ClusterActorRefProvider"
  }

  http {
    server {
      host = "0.0.0.0"
      port = 8080
      port = ${?HTTPPORT}
      server-header="cluster/1.0.0"
    }
  }

  remote {
    log-remote-lifecycle-events = off
    artery.untrusted-mode = off
    log-sent-messages = off

    netty.tcp {
      hostname = "192.168.0.78"
      host = "192.168.0.78"
      port = 2553
      hostname = ${?HOSTNAME}
      host = ${?HOST}
      port = ${?PORT}
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://dcim@192.168.0.78:2553"
      "akka.tcp://dcim@192.168.0.69:2553"
    ]
  }

  persistence {
    journal {
      plugin = "cassandra-journal"
    }
    snapshot-store {
      plugin = "cassandra-snapshot-store"
    }
  }
}
cassandra-journal {
  class = "akka.persistence.cassandra.journal.CassandraJournal"
  contact-points = ["192.168.0.165"]
  port = 9042
  cluster-id = "dcim-cluster"
  keyspace = "dcim_journal"
}

cassandra-snapshot-store {
  class = "akka.persistence.cassandra.snapshot.CassandraSnapshotStore"
  contact-points = ["192.168.0.165"]
  port = 9042
  cluster-id = "dcim-cluster"
  keyspace = "dcim_snapshot"
}
//<start id="serialization_config"/>
akka {
  actor {
    serializers {
    }
    serialization-bindings { //<co id="register_bindings"/>
    }
  }
}
//<end id="serialization_config"/>
